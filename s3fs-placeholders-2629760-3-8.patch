diff --git a/S3fsStreamWrapper.inc b/S3fsStreamWrapper.inc
index b82cc98..697052b 100644
--- a/S3fsStreamWrapper.inc
+++ b/S3fsStreamWrapper.inc
@@ -125,8 +125,8 @@ class S3fsStreamWrapper implements DrupalStreamWrapperInterface {
     $this->config = _s3fs_get_config();
 
     if (empty($this->config['bucket'])) {
-      $msg = t('Your AmazonS3 bucket name is not configured. Please visit the !settings_page.',
-        array('!settings_page' => l(t('configuration page'), '/admin/config/media/s3fs/settings')));
+      $msg = t('Your AmazonS3 bucket name is not configured. Please visit the @settings_page.',
+        array('@settings_page' => l(t('configuration page'), '/admin/config/media/s3fs/settings')));
       watchdog('S3 File System', $msg, array(), WATCHDOG_ERROR);
       throw new Exception($msg);
     }
diff --git a/s3fs.admin.inc b/s3fs.admin.inc
index 99c70ff..db13ebb 100644
--- a/s3fs.admin.inc
+++ b/s3fs.admin.inc
@@ -110,11 +110,11 @@ function s3fs_settings() {
     '#description'   => t(
       'The region in which your bucket resides. Be careful to specify this accurately,
       as you are likely to see strange or broken behavior if the region is set wrong.<br>
-      Use of the USA GovCloud region requires !SPECIAL_PERMISSION.<br>
-      Use of the China - Beijing region requires a !CHINESE_AWS_ACCT.',
+      Use of the USA GovCloud region requires @SPECIAL_PERMISSION.<br>
+      Use of the China - Beijing region requires a @CHINESE_AWS_ACCT.',
       array(
-          '!CHINESE_AWS_ACCT' => l('亚马逊 AWS account', 'http://www.amazonaws.cn'),
-          '!SPECIAL_PERMISSION' => l('special permission', 'http://aws.amazon.com/govcloud-us/'),
+          '@CHINESE_AWS_ACCT' => l('亚马逊 AWS account', 'http://www.amazonaws.cn'),
+          '@SPECIAL_PERMISSION' => l('special permission', 'http://aws.amazon.com/govcloud-us/'),
       )
     ),
   );
@@ -204,9 +204,9 @@ function s3fs_settings() {
     '#default_value' => _s3fs_get_setting('encryption'),
     '#disabled'      => isset($conf['s3fs_encryption']),
     '#description'   => t(
-      'If your bucket requires !ENCRYPTION, you can specify the encryption algorithm here',
+      'If your bucket requires @ENCRYPTION, you can specify the encryption algorithm here',
       array(
-        '!ENCRYPTION' => l('server-side encryption',
+        '@ENCRYPTION' => l('server-side encryption',
           'http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html'
         ),
       )
@@ -248,8 +248,8 @@ function s3fs_settings() {
       <b>PLEASE NOTE:</b> If you intend to use Drupal's performance options which aggregate your CSS or Javascript
       files, or will be using any other system that writes CSS or Javascript files into your site's public:// file
       system, you must perform some additional configuration on your webserver to make those files work correctly when
-      stored in S3. Please see the section titled <i>Aggregated CSS and JS in S3</i> in the !README for details.",
-      array('!README' => l('README', drupal_get_path('module', 's3fs') . '/README.txt'))
+      stored in S3. Please see the section titled <i>Aggregated CSS and JS in S3</i> in the @README for details.",
+      array('@README' => l('README', drupal_get_path('module', 's3fs') . '/README.txt'))
     ),
   );
 
@@ -315,9 +315,9 @@ function s3fs_settings() {
     '#description'   => t(
       'A list of timeouts and paths that should be delivered through a presigned url.<br>
       Enter one value per line, in the format timeout|path. e.g. "60|private_files/*". Paths use regex patterns
-      as per !link. If no timeout is provided, it defaults to 60 seconds.<br>
+      as per @link. If no timeout is provided, it defaults to 60 seconds.<br>
       <b>This feature does not work when "Enable CNAME" is used.</b>',
-      array('!link' => l('preg_match', 'http://php.net/preg_match'))
+      array('@link' => l('preg_match', 'http://php.net/preg_match'))
     ),
   );
 
@@ -329,9 +329,9 @@ function s3fs_settings() {
     '#rows'          => 5,
     '#description'   => t(
       'A list of paths for which users will be forced to save the file, rather than displaying it in the browser.<br>
-      Enter one value per line. e.g. "video/*". Paths use regex patterns as per !link.<br>
+      Enter one value per line. e.g. "video/*". Paths use regex patterns as per @link.<br>
       <b>This feature does not work when "Enable CNAME" is used.</b>',
-      array('!link' => l('preg_match', 'http://php.net/preg_match'))
+      array('@link' => l('preg_match', 'http://php.net/preg_match'))
     ),
   );
 
@@ -343,9 +343,9 @@ function s3fs_settings() {
     '#rows' => 5,
     '#description' => t(
       'A list of paths that should be delivered via BitTorrent.<br>
-      Enter one value per line, e.g. "big_files/*". Paths use regex patterns as per !link.<br>
+      Enter one value per line, e.g. "big_files/*". Paths use regex patterns as per @link.<br>
       <b>Private files and paths already set as Presigned URLs or Forced Save As cannot be delivered as torrents.</b>',
-      array('!link' => l('preg_match', 'http://php.net/preg_match'))
+      array('@link' => l('preg_match', 'http://php.net/preg_match'))
     ),
   );
 
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 79b9da9..f6a489b 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -114,11 +114,11 @@ class SettingsForm extends ConfigFormBase {
     '#description'   => t(
       'The region in which your bucket resides. Be careful to specify this accurately,
       as you are likely to see strange or broken behavior if the region is set wrong.<br>
-      Use of the USA GovCloud region requires !SPECIAL_PERMISSION.<br>
-      Use of the China - Beijing region requires a !CHINESE_AWS_ACCT.',
+      Use of the USA GovCloud region requires @SPECIAL_PERMISSION.<br>
+      Use of the China - Beijing region requires a @CHINESE_AWS_ACCT.',
       array(
-          '!CHINESE_AWS_ACCT' => \Drupal::l('亚马逊 AWS account', Url::fromUri('http://www.amazonaws.cn')),
-          '!SPECIAL_PERMISSION' => \Drupal::l('special permission', Url::fromUri('http://aws.amazon.com/govcloud-us/')),
+          '@CHINESE_AWS_ACCT' => \Drupal::l('亚马逊 AWS account', Url::fromUri('http://www.amazonaws.cn')),
+          '@SPECIAL_PERMISSION' => \Drupal::l('special permission', Url::fromUri('http://aws.amazon.com/govcloud-us/')),
       )
     ),
   );
@@ -190,9 +190,9 @@ class SettingsForm extends ConfigFormBase {
     '#title'         => t('Server-Side Encryption'),
     '#default_value' => $config->get('encryption'),
     '#description'   => t(
-      'If your bucket requires !ENCRYPTION, you can specify the encryption algorithm here',
+      'If your bucket requires @ENCRYPTION, you can specify the encryption algorithm here',
       array(
-        '!ENCRYPTION' => \Drupal::l('server-side encryption',
+        '@ENCRYPTION' => \Drupal::l('server-side encryption',
           Url::fromUri('http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html'
         )),
       )
@@ -284,9 +284,9 @@ class SettingsForm extends ConfigFormBase {
     '#description' => t(
       'A list of timeouts and paths that should be delivered through a presigned url.<br>
       Enter one value per line, in the format timeout|path. e.g. "60|private_files/*". Paths use regex patterns
-      as per !link. If no timeout is provided, it defaults to 60 seconds.<br>
+      as per @link. If no timeout is provided, it defaults to 60 seconds.<br>
       <b>This feature does not work when "Enable CNAME" is used.</b>',
-      array('!link' => \Drupal::l('preg_match', Url::fromUri('http://php.net/preg_match')))
+      array('@link' => \Drupal::l('preg_match', Url::fromUri('http://php.net/preg_match')))
     ),
   );
   $file_specific['saveas'] = array(
@@ -296,9 +296,9 @@ class SettingsForm extends ConfigFormBase {
     '#rows' => 5,
     '#description' => t(
       'A list of paths for which users will be forced to save the file, rather than displaying it in the browser.<br>
-      Enter one value per line. e.g. "video/*". Paths use regex patterns as per !link.<br>
+      Enter one value per line. e.g. "video/*". Paths use regex patterns as per @link.<br>
       <b>This feature does not work when "Enable CNAME" is used.</b>',
-      array('!link' => \Drupal::l('preg_match', Url::fromUri('http://php.net/preg_match')))
+      array('@link' => \Drupal::l('preg_match', Url::fromUri('http://php.net/preg_match')))
     ),
   );
   $file_specific['torrents'] = array(
@@ -308,9 +308,9 @@ class SettingsForm extends ConfigFormBase {
     '#rows' => 5,
     '#description' => t(
       'A list of paths that should be delivered via BitTorrent.<br>
-      Enter one value per line, e.g. "big_files/*". Paths use regex patterns as per !link.<br>
+      Enter one value per line, e.g. "big_files/*". Paths use regex patterns as per @link.<br>
       <b>Private files and paths which are already set as Presigned URLs or Forced Save As cannot be delivered as torrents.</b>',
-      array('!link' => \Drupal::l('preg_match', Url::fromUri('http://php.net/preg_match')))
+      array('@link' => \Drupal::l('preg_match', Url::fromUri('http://php.net/preg_match')))
     ),
   );
     return parent::buildForm($form, $form_state);
diff --git a/src/StreamWrapper/S3fsStream.php b/src/StreamWrapper/S3fsStream.php
index f1f7a86..00c49c6 100644
--- a/src/StreamWrapper/S3fsStream.php
+++ b/src/StreamWrapper/S3fsStream.php
@@ -142,8 +142,8 @@ class S3fsStream implements StreamWrapperInterface {
     }
 
     if (empty($this->config['bucket'])) {
-      $msg = t('Your AmazonS3 bucket name is not configured. Please visit the !settings_page.',
-        array('!settings_page' => l(t('configuration page'), '/admin/config/media/s3fs/settings')));
+      $msg = t('Your AmazonS3 bucket name is not configured. Please visit the @settings_page.',
+        array('@settings_page' => l(t('configuration page'), '/admin/config/media/s3fs/settings')));
       watchdog('S3 File System', $msg, array(), WATCHDOG_ERROR);
       throw new Exception($msg);
     }
diff --git a/tests/s3fs.test b/tests/s3fs.test
index 7fc8c99..b0a8735 100644
--- a/tests/s3fs.test
+++ b/tests/s3fs.test
@@ -3,9 +3,9 @@
 // Only define the S3fsTests class if the SimpleTest Clone module is installed.
 if (!module_exists('simpletest_clone')) {
   $link = l(t('SimpleTest Clone'), 'https://drupal.org/project/simpletest_clone');
-  $msg = "S3 File System's tests require the !simpletest_clone module. You will not see this message again until you clear the cache.";
-  drupal_set_message(t($msg, array('!link' => $link)), 'warning');
-  watchdog('S3 File System', $msg, array('!simpletest_clone' => $link), WATCHDOG_WARNING);
+  $msg = "S3 File System's tests require the @simpletest_clone module. You will not see this message again until you clear the cache.";
+  drupal_set_message(t($msg, array('@link' => $link)), 'warning');
+  watchdog('S3 File System', $msg, array('@simpletest_clone' => $link), WATCHDOG_WARNING);
 }
 else {
   module_load_include('php', 'simpletest_clone', 'simpletest_clone_test_case');
